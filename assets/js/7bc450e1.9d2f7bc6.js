"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5843],{70091:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var n=i(87462),a=(i(67294),i(3905));const r={title:"Configuration",sidebar_position:3},o=void 0,s={unversionedId:"get-started/configuration",id:"get-started/configuration",title:"Configuration",description:"Valkyrie Config",source:"@site/docs/get-started/configuration.md",sourceDirName:"get-started",slug:"/get-started/configuration",permalink:"/valkyrie-site/docs/get-started/configuration",draft:!1,tags:[],version:"current",lastUpdatedBy:"Gustav Stensson",lastUpdatedAt:1671199147,formattedLastUpdatedAt:"Dec 16, 2022",sidebarPosition:3,frontMatter:{title:"Configuration",sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Helm",permalink:"/valkyrie-site/docs/get-started/helm"},next:{title:"Logging and tracing",permalink:"/valkyrie-site/docs/get-started/logging-and-tracing"}},l={},d=[{value:"Valkyrie Config",id:"valkyrie-config",level:3}],p={toc:d};function c(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"valkyrie-config"},"Valkyrie Config"),(0,a.kt)("p",null,"Supply a yaml config file when running Valkyrie. It contains config for logging and tracing as well as provider specific configuration. It's possible to add environment variables within ",(0,a.kt)("inlineCode",{parentName:"p"},"${}"),", which will be replaced before the yaml is processed."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"logging:\n  level: info # debug, info, warn, error, fatal, panic\ntracing:\n  type: jaeger # stdout, jaeger, Zipkin, googleCloudTrace\n  url: 'http://traces-url'\n  service_name: valkyrie\n  google_project_id: ${TRACING_GOOGLE_PROJECT_ID} # if you're using googleCloudTrace\npam: # Player Account Management\n  name: generic\n  api_key: pam-api-key\n  url: 'https://pam-url'\nproviders:\n  - name: providerName\n    url: 'http://localhost:3000'\n    auth: # Different providers use different auth. Add what is needed for the specific Providers\n      api_key: 123\nhttp_server: # optional http server configuration\n  read_timeout: 1s\n  write_timeout: 1s\n  idle_timeout: 30s\nhttp_client: # optional http client configuration\n  read_timeout: 1s\n  write_timeout: 1s\n  idle_timeout: 30s\n  request_timeout: 1s\n")),(0,a.kt)("p",null,"For a full list of available providers please look ",(0,a.kt)("a",{parentName:"p",href:"/providers"},"here"),". Each provider specifies what configuration is needed."))}c.isMDXComponent=!0}}]);