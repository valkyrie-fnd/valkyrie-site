"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8010],{50688:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>u,contentTitle:()=>p,default:()=>r,frontMatter:()=>l,metadata:()=>o,toc:()=>g});var a=i(87462),t=(i(67294),i(3905));const l={id:"vplugin-setup",title:"Usage",sidebar_label:"Usage",description:"Vplugin usage",sidebar_position:1},p=void 0,o={unversionedId:"wallet/vplugin/vplugin-setup",id:"wallet/vplugin/vplugin-setup",title:"Usage",description:"Vplugin usage",source:"@site/docs/wallet/vplugin/usage.mdx",sourceDirName:"wallet/vplugin",slug:"/wallet/vplugin/vplugin-setup",permalink:"/docs/wallet/vplugin/vplugin-setup",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"vplugin-setup",title:"Usage",sidebar_label:"Usage",description:"Vplugin usage",sidebar_position:1},sidebar:"defaultSidebar",previous:{title:"Introduction",permalink:"/docs/wallet/vplugin/vplugin-introduction"},next:{title:"VPlugin interface",permalink:"/docs/wallet/vplugin/vplugin-interface"}},u={},g=[],s={toc:g};function r(n){let{components:e,...i}=n;return(0,t.kt)("wrapper",(0,a.Z)({},s,i,{components:e,mdxType:"MDXLayout"}),(0,t.kt)("p",null,"You need to register gobs from valkyrie"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},"// Need to register types used for coms\nvplugin.RegisterGobs()\n")),(0,t.kt)("p",null,"In the plugin main method you need to setup a map of plugins. ",(0,t.kt)("inlineCode",{parentName:"p"},"YourPlugin")," needs to implement the ",(0,t.kt)("inlineCode",{parentName:"p"},"vplugin.PAM")," interface."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'// pluginName needs to match "type" from configuration\nvar pluginMap = map[string]plugin.Plugin{\n  "pluginName": &vplugin.VPlugin{Impl: YourPlugin{}},\n}\n')),(0,t.kt)("p",null,"And then serve the plugin. "),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},"plugin.Serve(&plugin.ServeConfig{\n  HandshakeConfig: handshakeConfig,\n  Plugins:         pluginMap,\n})\n")),(0,t.kt)("admonition",{type:"tip"},(0,t.kt)("p",{parentName:"admonition"},"The ",(0,t.kt)("inlineCode",{parentName:"p"},"plugin.ServeConfig")," can also take a Logger. Read hashicorp/go-plugin documentation for more information.")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport(\n  "github.com/hashicorp/go-plugin"\n  "github.com/valkyrie-fnd/valkyrie/pam/vplugin"\n)\nvar handshakeConfig = plugin.HandshakeConfig{\n  ProtocolVersion:  1,\n  MagicCookieKey:   vplugin.MagicCookieKey,\n  MagicCookieValue: vplugin.MagicCookieValue,\n}\nfunc main(){\n  vplugin.RegisterGobs()\n  // pluginMap is the map of plugins we can dispense.\n  // pluginName needs to match "type" from configuration\n  var pluginMap = map[string]plugin.Plugin{\n    "pluginName": &vplugin.VPlugin{Impl: YourPlugin{}},\n  }\n\n  plugin.Serve(&plugin.ServeConfig{\n    HandshakeConfig: handshakeConfig,\n    Plugins:         pluginMap,\n  })\n}\n')))}r.isMDXComponent=!0}}]);